name: Check & Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  NEXT_PUBLIC_DATO_CMS: ${{ secrets.NEXT_PUBLIC_DATO_CMS }}

defaults:
  run:
    working-directory: ./

jobs:
  check:
    name: Check & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: "use node ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"
          # cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint check
        run: yarn lint

      - name: Format check
        run: yarn prettier

      - name: Unit & Integration tests
        run: yarn test

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps
      - name: Playwright tests
        timeout-minutes: 60
        run: yarn playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  analyze:
    name: Bundle Analysis
    needs: ["check"]
    if: github.event_name != 'push'
    env:
      SKIP_ENV_VALIDATION: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          # cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Restore next build
        uses: actions/cache@v3
        id: restore-build-cache
        env:
          cache-name: cache-next-build
        with:
          path: .next/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Build next.js app
        env:
          SKIP_BUILD_PRODUCT_REDIRECTS: 1
        run: yarn build

      - name: Analyze bundle
        run: npx -p nextjs-bundle-analysis report

      - name: Upload bundle
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: .next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v2
        if: success() && github.event.number
        with:
          workflow: nextjs_bundle_analysis.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: .next/analyze/base

      - name: Compare with base branch bundle
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && npx -p nextjs-bundle-analysis compare

      - name: Get comment body
        id: get-comment-body
        if: success() && github.event.number
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require('fs')
            const comment = fs.readFileSync('.next/analyze/__bundle_analysis_comment.txt', 'utf8')
            core.setOutput('body', comment)

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: "<!-- __NEXTJS_BUNDLE -->"

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number && steps.fc.outputs.comment-id == 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number && steps.fc.outputs.comment-id != 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace

  semantic-release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: ["check", "analyze"]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          # cache: "yarn"

      - uses: bahmutov/npm-install@v1
        with:
          useRollingCache: true
          install-command: yarn --frozen-lockfile

      - name: "Build package"
        run: yarn build

      - name: "Release"
        id: "release"
        uses: codfish/semantic-release-action@v2.2.0
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
